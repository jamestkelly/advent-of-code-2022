from main import CathodeRayTube


def test_part_one_search():
    """
    Method to test part one of day ten solution.
    """
    cathode_ray = CathodeRayTube()
    assert cathode_ray.part_one_search() == 14920


def test_part_two_search():
    """
    Method to test part two of day ten solution.
    """
    cathode_ray = CathodeRayTube()
    assert cathode_ray.part_two_search() == [
        ['#', '#', '#', '.', '.', '#', '.', '.', '#', '.', '.', '#', '#', '.', '.', '.', '#', '#', '.', '.', '.', '#',
         '#', '.', '.', '#', '#', '#', '.', '.', '#', '.', '.', '#', '.', '#', '#', '#', '#', '.'],
        ['#', '.', '.', '#', '.', '#', '.', '.', '#', '.', '#', '.', '.', '#', '.', '#', '.', '.', '#', '.', '#', '.',
         '.', '#', '.', '#', '.', '.', '#', '.', '#', '.', '.', '#', '.', '.', '.', '.', '#', '.'],
        ['#', '#', '#', '.', '.', '#', '.', '.', '#', '.', '#', '.', '.', '.', '.', '#', '.', '.', '#', '.', '#', '.',
         '.', '.', '.', '#', '#', '#', '.', '.', '#', '.', '.', '#', '.', '.', '.', '#', '.', '.'],
        ['#', '.', '.', '#', '.', '#', '.', '.', '#', '.', '#', '.', '.', '.', '.', '#', '#', '#', '#', '.', '#', '.',
         '.', '.', '.', '#', '.', '.', '#', '.', '#', '.', '.', '#', '.', '.', '#', '.', '.', '.'],
        ['#', '.', '.', '#', '.', '#', '.', '.', '#', '.', '#', '.', '.', '#', '.', '#', '.', '.', '#', '.', '#', '.',
         '.', '#', '.', '#', '.', '.', '#', '.', '#', '.', '.', '#', '.', '#', '.', '.', '.', '.'],
        ['#', '#', '#', '.', '.', '.', '#', '#', '.', '.', '.', '#', '#', '.', '.', '#', '.', '.', '#', '.', '.', '#',
         '#', '.', '.', '#', '#', '#', '.', '.', '.', '#', '#', '.', '.', '#', '#', '#', '#', '.']]
